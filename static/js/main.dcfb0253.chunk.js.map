{"version":3,"sources":["components/Peg.js","components/LiteBrite.js","App.js","index.js"],"names":["props","activeClass","isActive","colorClass","color","onClick","className","colors","useState","activeLights","setActiveLights","selectedColor","setSelectedColor","console","log","history","useHistory","useEffect","classic","Array","from","rows","map","_","x","id","key","cols","y","pegState","Peg","updatedLights","coordinateString","active","encodedSheet","btoa","JSON","stringify","push","i","window","confirm","App","exact","path","LiteBrite","render","parse","atob","match","params","data","ReactDOM","document","getElementById"],"mappings":"2RAEe,WAAAA,GACb,IAAMC,EAAcD,EAAME,SAAW,cAAgB,GAC/CC,EAAU,eAAWH,EAAMI,OACjC,OACE,yBACEC,QAAS,kBAAML,EAAMK,WACrBC,UAAS,cAASL,EAAT,YAAwBE,MCHjCI,G,MAAS,CAAC,MAAO,SAAU,OAAQ,SAAU,OAAQ,YAE5C,WAACP,GAAW,IAAD,EAEgBQ,mBAAS,IAFzB,mBAEjBC,EAFiB,KAEHC,EAFG,OAGkBF,mBAAS,UAH3B,mBAGjBG,EAHiB,KAGFC,EAHE,KAKxBC,QAAQC,IAAI,eAAgBL,GAC5B,IAAMM,EAAUC,cAMhB,OAJAC,qBAAU,WACRP,EAAgBV,EAAMS,cAAgB,MACrC,CAACT,EAAMS,eAGR,yBACEH,UAAS,qBACPN,EAAMkB,QAAU,uBAAyB,KAG3C,yBAAKZ,UAAU,sBACZa,MAAMC,KAAK,IAAID,MAAMnB,EAAMqB,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OACrC,yBAAKlB,UAAU,MAAMmB,GAAE,cAASD,GAAKE,IAAG,cAASF,IAC9CL,MAAMC,KACL,IAAID,MACFnB,EAAMkB,SACFM,EAAI,IAAM,EACRxB,EAAM2B,KAAO,EAEf3B,EAAM2B,OAEZL,KAAI,SAACC,EAAGK,GACR,IAAMC,EAAWpB,EAAa,GAAD,OAAIe,EAAJ,YAASI,IACtC,OACE,yBACEtB,UAAU,SACVmB,GAAE,eAAUD,EAAV,YAAeI,GACjBF,IAAG,eAAUF,EAAV,YAAeI,IAElB,kBAACE,EAAD,CACEzB,QAAS,WACP,IAAM0B,EAAa,eAAQtB,GACrBuB,EAAgB,UAAMR,EAAN,YAAWI,GAE7BG,EAAcC,UAA0BD,EAAcC,GAExDD,EAAcC,GAAoB,CAChCC,QAAQ,EACR7B,MAAOO,GAIXD,EAAgBqB,GAOhB,IAAMG,EAAeC,KAAKC,KAAKC,UAAUN,IACzChB,EAAQuB,KAAR,iBAAuBJ,KAGzB9B,MACEyB,EAAWA,EAASzB,MAAQO,EAE9BT,WAAU2B,GAAWA,EAASI,kBAQ5C,yBAAK3B,UAAU,uBACZC,EAAOe,KAAI,SAAClB,EAAOmC,GAAR,OACV,4BACAb,IAAKa,EAAGjC,UAAS,qCAAgCF,EAAhC,YACbA,IAAUO,EACN,wBACA,IAENN,QAAS,WAEPO,EAAiBR,KAGlBA,MAIL,4BACEC,QAAS,WACamC,OAAOC,QAAQ,gCAGjC1B,EAAQuB,KAAK,OALnB,Y,MChEOI,MArBf,WAEE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAACC,EAAD,CAAW3B,SAAO,EAACS,KAAM,GAAIN,KAAM,MAGrC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,eAAeE,OAAQ,SAAC9C,GACxC,IAAMS,EAAe2B,KAAKW,MAAMC,KAAKhD,EAAMiD,MAAMC,OAAOC,OAExD,OADAtC,QAAQC,IAAIL,GAEV,kBAACoC,EAAD,CAAWpC,aAAcA,EAAcS,SAAO,EAACS,KAAM,GAAIN,KAAM,WCnB3E+B,IAASN,OAAO,kBAAC,EAAD,MAASO,SAASC,eAAe,W","file":"static/js/main.dcfb0253.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default props => {\n  const activeClass = props.isActive ? \"peg--active\" : \"\";\n  const colorClass = `peg--${props.color}`;\n  return (\n    <div\n      onClick={() => props.onClick()}\n      className={`peg ${activeClass} ${colorClass}`}\n    />\n  );\n};\n","import React, { Component, useState, useEffect } from \"react\";\nimport Peg from \"./Peg\";\nimport \"../styles/litebrite.scss\"\nimport { useHistory } from 'react-router-dom'\n\nconst colors = [\"red\", \"orange\", \"blue\", \"yellow\", \"lime\", \"hotpink\"];\n\nexport default (props) => {\n\n  const [activeLights, setActiveLights] = useState({})\n  const [selectedColor, setSelectedColor] = useState('orange')\n\n  console.log('activeLights', activeLights)\n  const history = useHistory()\n\n  useEffect(() => {\n    setActiveLights(props.activeLights || {})\n  }, [props.activeLights])\n\n  return (\n    <div\n      className={`lite-brite ${\n        props.classic ? \" lite-brite--classic\" : \"\"\n      }`}\n    >\n      <div className=\"lite-brite__lights\">\n        {Array.from(new Array(props.rows)).map((_, x) => (\n          <div className=\"row\" id={`row-${x}`} key={`row-${x}`}>\n            {Array.from(\n              new Array(\n                props.classic\n                  ? x % 2 !== 0\n                    ? props.cols - 1\n                    : props.cols\n                  : props.cols\n              )\n            ).map((_, y) => {\n              const pegState = activeLights[`${x},${y}`];\n              return (\n                <div\n                  className=\"column\"\n                  id={`cols-${x}-${y}`}\n                  key={`cols-${x}-${y}`}\n                >\n                  <Peg\n                    onClick={() => {\n                      const updatedLights = { ...activeLights };\n                      const coordinateString = `${x},${y}`;\n\n                      if (updatedLights[coordinateString]) delete updatedLights[coordinateString]\n                      else {\n                        updatedLights[coordinateString] = {\n                          active: true,\n                          color: selectedColor\n                        }\n                      }\n\n                      setActiveLights(updatedLights)\n\n                      // console.log({\n                      //   updatedLights,\n                      //   string: btoa(JSON.stringify(updatedLights))\n                      // })\n                      // setActiveLights(updatedLights)\n                      const encodedSheet = btoa(JSON.stringify(updatedLights))\n                      history.push(`/sheet/${encodedSheet}`)\n\n                    }}\n                    color={\n                      pegState ? pegState.color : selectedColor\n                    }\n                    isActive={pegState ? pegState.active : false}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n      <div className=\"light-brite__colors\">\n        {colors.map((color, i) => (\n          <button\n          key={i} className={`color-picker color-picker--${color} ${\n              color === selectedColor\n                ? \" color-picker--active\"\n                : \"\"\n            }`}\n            onClick={() => {\n              /** setState of selectedColor to 'blue' **/\n              setSelectedColor(color)\n            }}\n          >\n            {color}\n          </button>\n        ))}\n\n        <button\n          onClick={() => {\n            const shouldClear = window.confirm(\"You sure you want to clear?\");\n            /** setState of selectedColor to 'blue' **/\n            if (shouldClear) {\n              history.push('/')\n            }\n          }}\n        >\n          Clear\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport LiteBrite from \"./components/LiteBrite\";\nimport './App.css';\n\nfunction App() {\n  // return \n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/'>\n          <LiteBrite classic cols={22} rows={19} />\n        </Route>\n\n        <Route exact path='/sheet/:data' render={(props) => {\n          const activeLights = JSON.parse(atob(props.match.params.data));\n          console.log(activeLights)\n          return (\n            <LiteBrite activeLights={activeLights} classic cols={22} rows={19} />\n          )\n        }} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}